name: Windows Release (Drive + GitHub)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r build/requirements-alpha.txt
          pip install google-api-python-client google-auth google-auth-httplib2 pyinstaller

      - name: Install Inno Setup
        run: |
          choco install innosetup -y

      - name: Build Windows artifacts (onedir, onefile, installer)
        shell: cmd
        run: |
          call build\win_build_release.bat

      - name: Find installer
        id: find_installer
        shell: bash
        run: |
          echo "installer=dist/_installer/efdrift-scrutineer-setup.exe" >> $GITHUB_OUTPUT

      - name: Upload installer to Google Drive (Service Account)
        id: drive
        continue-on-error: true
        env:
          GDRIVE_SERVICE_ACCOUNT_JSON: ${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}
        run: |
          python build\upload_to_drive_sa.py --file "${{ steps.find_installer.outputs.installer }}" --folder-id "${{ secrets.GDRIVE_FOLDER_ID }}"

      - name: Build bootstrap EXE (downloads Drive ID)
        if: ${{ steps.drive.outcome == 'success' && steps.drive.outputs.id != '' }}
        shell: bash
        env:
          EF_SCRUTINEER_DRIVE_ID: ${{ steps.drive.outputs.id }}
        run: |
          python - << 'PY'
          from pathlib import Path
          p=Path('tools/net_installer_stub.py')
          t=p.read_text(encoding='utf-8')
          import os
          did=os.environ.get('EF_SCRUTINEER_DRIVE_ID','').strip()
          t=t.replace('os.getenv("EF_SCRUTINEER_DRIVE_ID", "1Lwp_TtjGY0tHmF91PfCt8GoyLKGeKi28")', f'os.getenv("EF_SCRUTINEER_DRIVE_ID", "{did}")')
          p.write_text(t,encoding='utf-8')
          PY
          pyinstaller --noconfirm --clean --log-level WARN --onefile --console --name "eF Drift Car Scrutineer" --distpath build --workpath build\bootstrap-build --specpath build tools\net_installer_stub.py

      - name: Create update.json manifest (Drive URL)
        if: ${{ steps.drive.outcome == 'success' && steps.drive.outputs.url != '' }}
        run: |
          python build\make_manifest.py --file "${{ steps.find_installer.outputs.installer }}" --name "efdrift-scrutineer-setup.exe" --url "${{ steps.drive.outputs.url }}" --out "dist\update.json"

      - name: Create update.json manifest (GitHub URL fallback)
        if: ${{ steps.drive.outcome != 'success' || steps.drive.outputs.url == '' }}
        run: |
          python build\make_manifest.py --file "${{ steps.find_installer.outputs.installer }}" --name "efdrift-scrutineer-setup.exe" --url "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/efdrift-scrutineer-setup.exe" --out "dist\update.json"

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist\update.json
            build\eF Drift Car Scrutineer.exe
            dist\_installer\efdrift-scrutineer-setup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
